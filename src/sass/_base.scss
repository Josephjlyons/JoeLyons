@use 'variables' as *;
@use 'mixin';


*,
::before,
::after {
    margin: 0;
    padding: 0;
    box-sizing: inherit;
}

html {
    box-sizing: border-box;
    font-size: 62.5%; //1 rem = 10px
    scroll-behavior: smooth;
    overflow-x: hidden;
    max-width: 100%;


    @media only screen and (max-width: $bp-smallest) {
        font-size: 55%;
        max-width: 100%;
        overflow-x: hidden;
    }
}

body {
    color: $primary-font-color;
    background-color: black;
    overflow-anchor: none;
    overflow: hidden;
    font-weight: 300;
    line-height: 1.6;
}

a {
    text-decoration: none;
}


.container {
    display: grid;
    grid-template-columns: 8rem [full-start] minmax(6rem, 1fr) [center-start] repeat(8, [col-start] minmax(min-content, 14rem)[col-end]) [center-end] 8rem [full-end];
    grid-template-rows: 100vh 45vh min-content  repeat(4,min-content);
    background-image:
        radial-gradient(white, rgba(255, 255, 255, .2) 2px, transparent 4px),
        radial-gradient(white, rgba(255, 255, 255, .15) 1px, transparent 3px),
        radial-gradient(white, rgba(255, 255, 255, .5) 1px, transparent 3px),
        radial-gradient(white, rgba(255, 255, 255, .1) 2px, transparent 1px);
    background-size: 550px 550px, 350px 350px, 250px 250px, 150px 150px;

    @media only screen and (max-width: $bp-largest) {
        grid-template-rows: 100vh 50vh min-content 50vw repeat(4, min-content);
    }

    @media only screen and (max-width: $bp-large) {
        grid-template-rows: 100vh 75vh min-content max-content repeat(4, min-content);
    }

    @media only screen and (max-width: $bp-medium) {
        grid-template-rows: 100vh max-content min-content max-content repeat(4, min-content);

    }

}